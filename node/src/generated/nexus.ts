/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Mutation: {};
  Pokemon: { // root type
    attack?: number | null; // Int
    createdate?: string | null; // String
    defense?: number | null; // Int
    favorite?: boolean | null; // Boolean
    generation?: number | null; // Int
    hp?: number | null; // Int
    id?: number | null; // Int
    legendary?: boolean | null; // Boolean
    name?: string | null; // String
    spatc?: number | null; // Int
    spdef?: number | null; // Int
    speed?: number | null; // Int
    total?: number | null; // Int
    type?: string | null; // String
    type2?: string | null; // String
    updatedate?: string | null; // String
  }
  Pokemons: { // root type
    pages?: number | null; // Int
    pokemons_type?: Array<NexusGenRootTypes['Pokemon'] | null> | null; // [Pokemon]
  }
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    updateFavoritePokemon: NexusGenRootTypes['Pokemon'] | null; // Pokemon
  }
  Pokemon: { // field return type
    attack: number | null; // Int
    createdate: string | null; // String
    defense: number | null; // Int
    favorite: boolean | null; // Boolean
    generation: number | null; // Int
    hp: number | null; // Int
    id: number | null; // Int
    legendary: boolean | null; // Boolean
    name: string | null; // String
    spatc: number | null; // Int
    spdef: number | null; // Int
    speed: number | null; // Int
    total: number | null; // Int
    type: string | null; // String
    type2: string | null; // String
    updatedate: string | null; // String
  }
  Pokemons: { // field return type
    pages: number | null; // Int
    pokemons_type: Array<NexusGenRootTypes['Pokemon'] | null> | null; // [Pokemon]
  }
  Query: { // field return type
    pokemon: NexusGenRootTypes['Pokemon'] | null; // Pokemon
    pokemons: NexusGenRootTypes['Pokemons'] | null; // Pokemons
    types: Array<string | null> | null; // [String]
  }
}

export interface NexusGenFieldTypeNames {
  Mutation: { // field return type name
    updateFavoritePokemon: 'Pokemon'
  }
  Pokemon: { // field return type name
    attack: 'Int'
    createdate: 'String'
    defense: 'Int'
    favorite: 'Boolean'
    generation: 'Int'
    hp: 'Int'
    id: 'Int'
    legendary: 'Boolean'
    name: 'String'
    spatc: 'Int'
    spdef: 'Int'
    speed: 'Int'
    total: 'Int'
    type: 'String'
    type2: 'String'
    updatedate: 'String'
  }
  Pokemons: { // field return type name
    pages: 'Int'
    pokemons_type: 'Pokemon'
  }
  Query: { // field return type name
    pokemon: 'Pokemon'
    pokemons: 'Pokemons'
    types: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    updateFavoritePokemon: { // args
      id?: number | null; // Int
    }
  }
  Query: {
    pokemon: { // args
      id?: number | null; // Int
      name?: string | null; // String
    }
    pokemons: { // args
      favorite?: boolean | null; // Boolean
      limit?: number | null; // Int
      name?: string | null; // String
      page?: number | null; // Int
      type?: string | null; // String
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}